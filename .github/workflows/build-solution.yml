name: Build and Deploy Develop Docker Container
on:
  push:
    branches:
      - main

env:
  WEBAPP_IMAGE_NAME: hsaii/webapp
  SERVER_IMAGE_NAME: hsaii/server
  REDIS_IMAGE_NAME: hsaii/redis
  MARIADB_IMAGE_NAME: hsaii/mariadb
  MONGODB_IMAGE_NAME: hsaii/mongo
  ENVOY_IMAGE_NAME: hsaii/envoy
  MIGRATION_IMAGE_NAME: hsaii/migration

jobs:
  build-publish-webapp:
    strategy:
      fail-fast: false
    name: Build and deploy webapp container
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Container registry.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.WEBAPP_IMAGE_NAME }}

      # Builds and push the Docker image.
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: ./
          file: ./packages/webapp/Dockerfile
          platforms: linux/amd64
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ env.WEBAPP_IMAGE_NAME }}:main

  build-publish-server:
    name: Build and deploy server container
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Container registry.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Builds and push the Docker image.
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: ./
          file: ./packages/server/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.SERVER_IMAGE_NAME }}:main
          labels: ${{ steps.meta.outputs.labels }}

  build-publish-redis:
    name: Build and deploy redis container
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Container registry.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Builds and push the Docker image.
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: ./docker/redis/
          file: ./docker/redis/Dockerfile
          platforms: linux/amd64
          push: true
          # tags: bigcapitalhq/server:develop
          tags: ${{ env.REDIS_IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}

  build-publish-mariadb:
    name: Build and deploy mariadb container
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Container registry.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Builds and push the Docker image.
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: ./docker/mariadb/
          file: ./docker/mariadb/Dockerfile
          platforms: linux/amd64
          push: true
          # tags: bigcapitalhq/server:develop
          tags: ${{ env.MARIADB_IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
  
  build-publish-mongo:
    name: Build and deploy mongodb container
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Container registry.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Builds and push the Docker image.
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: ./docker/mongo/
          file: ./docker/mongo/Dockerfile
          platforms: linux/amd64
          push: true
          # tags: bigcapitalhq/server:develop
          tags: ${{ env.MONGODB_IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}

  build-publish-envoy:
    name: Build and deploy envoy container
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Container registry.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Builds and push the Docker image.
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: ./docker/envoy/
          file: ./docker/envoy/Dockerfile
          platforms: linux/amd64
          push: true
          # tags: bigcapitalhq/server:develop
          tags: ${{ env.ENVOY_IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}

  build-publish-migration:
    name: Build and deploy migration container
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Container registry.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Builds and push the Docker image.
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: ./docker/migration/
          file: ./docker/migration/Dockerfile
          platforms: linux/amd64
          push: true
          # tags: bigcapitalhq/server:develop
          tags: ${{ env.MIGRATION_IMAGE_NAME }}:main
          labels: ${{ steps.meta.outputs.labels }}